// <auto-generated />
using System;
using KazanExpress.Parser.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KazanExpress.Parser.Infrastructure.Data.Migrations
{
    [DbContext(typeof(KazanExpressParserDbContext))]
    [Migration("20210814194554_AddCategoryName_V2")]
    partial class AddCategoryName_V2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("KazanExpress.Parser.Domain.Entities.CategoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Adult")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Eco")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ProductAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductIds")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("ProductAmount");

                    b.HasIndex("ProductIds");

                    b.HasIndex("Title");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KazanExpress.Parser.Domain.Entities.ProductEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.Property<long>("CharityCommission")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("FullPrice")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEco")
                        .HasColumnType("boolean");

                    b.Property<long>("OrdersQuantity")
                        .HasColumnType("bigint");

                    b.Property<long>("ROrdersQuantity")
                        .HasColumnType("bigint");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<long>("SellPrice")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName");

                    b.HasIndex("CharityCommission");

                    b.HasIndex("FullPrice");

                    b.HasIndex("Id");

                    b.HasIndex("OrdersQuantity");

                    b.HasIndex("ROrdersQuantity");

                    b.HasIndex("Rating");

                    b.HasIndex("SellPrice");

                    b.HasIndex("Title");

                    b.ToTable("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
